<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>interview on Jared Rosario</title>
    <link>https://kaonpositive.github.io/tags/interview/</link>
    <description>Recent content in interview on Jared Rosario</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 25 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://kaonpositive.github.io/tags/interview/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Design Patterns</title>
      <link>https://kaonpositive.github.io/posts/designpatterns/</link>
      <pubDate>Fri, 25 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>https://kaonpositive.github.io/posts/designpatterns/</guid>
      <description>What is Abstract Factory?  Provide an interface for creating families of related or dependent objects without specifying their concrete classes.  What is an Adapter?  Convert the interface of a class into another interface clients expect. Adapter lets classes work together that couldn&amp;rsquo;t otherwise because of incompatibility interfaces.  What is a Bridge?  Decouple an abstraction from its implementation so that the two can very independetly.  What is a builder?</description>
    </item>
    
    <item>
      <title>Linked List</title>
      <link>https://kaonpositive.github.io/posts/linkedlist/</link>
      <pubDate>Fri, 25 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>https://kaonpositive.github.io/posts/linkedlist/</guid>
      <description>What is a linked-list?  It is a non-contiguous linear data structure where a sequence of nodes are connected to one another via a reference pointer. Each node stores the data and address of the next node.  What does each node have?  A node in a linked-list typically have two components:  Data: Holds the value/data of the associated node Next Pointer: Stores memory address (reference pointer) of the next node in the sequence Head and Tail: The head node will be the way to access the linked list&amp;ndash;it points to the first node of the list.</description>
    </item>
    
    <item>
      <title>OA Notes</title>
      <link>https://kaonpositive.github.io/posts/oanotes/</link>
      <pubDate>Fri, 25 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>https://kaonpositive.github.io/posts/oanotes/</guid>
      <description>review data structures and algorithms.
 strings, lists, trees, queues, stacks, graphs, heaps, hash tables, and hash maps. sorts, searches, recursion, iterative approaches, and traversals (BFS and DFS) understand basic programming concepts time yourself as you will have 120 minutes to complete the assessment. practice different types of questions in the Candidate Prep on HackerRank  </description>
    </item>
    
    <item>
      <title>Study Plan 75</title>
      <link>https://kaonpositive.github.io/posts/studyplan75/</link>
      <pubDate>Fri, 25 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>https://kaonpositive.github.io/posts/studyplan75/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Time Complexity</title>
      <link>https://kaonpositive.github.io/posts/timecomplexity/</link>
      <pubDate>Fri, 25 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>https://kaonpositive.github.io/posts/timecomplexity/</guid>
      <description>time complex</description>
    </item>
    
  </channel>
</rss>
