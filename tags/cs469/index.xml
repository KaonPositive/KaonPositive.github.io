<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cs469 on Jared Rosario</title>
    <link>https://kaonpositive.github.io/tags/cs469/</link>
    <description>Recent content in cs469 on Jared Rosario</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 05 Feb 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://kaonpositive.github.io/tags/cs469/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CS 469 Notes 04</title>
      <link>https://kaonpositive.github.io/posts/cs469notes04/</link>
      <pubDate>Mon, 05 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://kaonpositive.github.io/posts/cs469notes04/</guid>
      <description>Lecture NOTE: For the log function, the reason as to why we are adding 1 to r is due to the fact that if log(0), then it would be undefined.
Recall from last lecture (Intensity Transformation): Formula for intensity transformation (or point processing): $s = T(r)$
Formula for Image Negatives: $s = (L-1)-r$
Formula for Log Transformation: $s = clog(1 + r)$
Power Law (Gamma) Transformation Formula is: $ s = cr^\gamma $ or $ s = c(r + \epsilon)^\gamma$ for $c &amp;gt; 0$ and $\gamma &amp;gt; 0$ and s and r are scaled to $[0, 1]$</description>
    </item>
    
    <item>
      <title>CS 469 Notes 05</title>
      <link>https://kaonpositive.github.io/posts/cs469notes05/</link>
      <pubDate>Mon, 05 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://kaonpositive.github.io/posts/cs469notes05/</guid>
      <description>Lecture Histogram A histogram plots how many times (frequency) each intensity value in an image occurs.
Histogram Equalization It produces a transformation function to generate an output image w/ a uniform histogram.
Histogram equalization in DIP can be categorized into two types:
 Discrete - Is the standard in digital image processing. Intensity levels of pixels are discrete values Continuous - Used in theory and simulations. Data not limited to a set of discrete values&amp;ndash;value can be within a range.</description>
    </item>
    
    <item>
      <title>CS 469 Notes 06</title>
      <link>https://kaonpositive.github.io/posts/cs469notes06/</link>
      <pubDate>Mon, 05 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://kaonpositive.github.io/posts/cs469notes06/</guid>
      <description>Lecture Spatial Filtering It is a technique for modifying/enhancing images by manipulating the value of each pixel based on its own value and the values of surrounding neighbors.
In terms of digital image processing, a filter is a predefined matrix known as a kernel/mask/template/window.
 NOTE: the matrix will determine how to integrate a pixel w/ its neighbors to generate a new pixel value.
 Depending on the intended effect of an image, filters will vary in size, shape, and the values that they contain.</description>
    </item>
    
    <item>
      <title>CS 469 Notes 03</title>
      <link>https://kaonpositive.github.io/posts/cs469notes03/</link>
      <pubDate>Wed, 31 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://kaonpositive.github.io/posts/cs469notes03/</guid>
      <description>Lecture NOTE: QUIZ ON MONDAY FEB 5
Spatial Operations Set of operations include:
 Single-pixel Neighborhood Geometric  Difference between intensity transformation and spatial filtering
 Intensity Transformation - it is point-based&amp;ndash;affects each pixel independently. Spatial Filtering - neighborhood-based&amp;ndash;considers the surrounding pixels.  Intensity transformations It is also known as point processing The purpose of intensity transformations is to modify pixels values to enhance the image.
The transformation is independent of locations&amp;ndash;determined only by the intensity values.</description>
    </item>
    
    <item>
      <title>CS 469 Notes 02</title>
      <link>https://kaonpositive.github.io/posts/cs469notes02/</link>
      <pubDate>Mon, 29 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://kaonpositive.github.io/posts/cs469notes02/</guid>
      <description>Lecture Notes Images can be represented as:
 Surface in a 3D space Visual Intensity Array 2D Numerical Array  Representing Digital Images: Consider a continuous image with a function $f(s, t)$ Through sampling and quantization, the digital image will then be $f(x, y)$
Formula to get the coordinates of the center of the image: $(x_c, y_c) = (floor(M/2), floor(N/2))$
Two types of different image resolutions:
  Spatial Resolution (1920 x 1080) - is determined how fine/coarse the image is (ex: low spatial resolution would result in jagged lines; think of pixelated alphabets/sharp images).</description>
    </item>
    
    <item>
      <title>CS 469 Notes 01</title>
      <link>https://kaonpositive.github.io/posts/cs469notes01/</link>
      <pubDate>Mon, 22 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://kaonpositive.github.io/posts/cs469notes01/</guid>
      <description>Lecture Notes Why studying the human eye is important:
 Mimicking visual processes Image interpretation and design Quality Color Processing Avoiding Artifacts Human-Computer Interaction  Key Components of the Eye:
 Lens and Muscles - Focuses light onto the retina Retina - Contains photoreceptors cells (rods and cones). It is a light-sensitive layer that is in the back of the eye. Rods and cones are essentially the &amp;lsquo;sensors&amp;rsquo; that receive the light.</description>
    </item>
    
    <item>
      <title>CS 469 Notes 00</title>
      <link>https://kaonpositive.github.io/posts/cs469notes00/</link>
      <pubDate>Wed, 17 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://kaonpositive.github.io/posts/cs469notes00/</guid>
      <description>Lecture Notes What is Digital Image Processing? Image - a 2D function f(x,y) where x and y represent the coordinates. f would be the amplitude for the given coordinates x and y.
 NOTE: the 2D function f(x,y) (amplitude) is called the intensity/gray level of the image.
 An image is considered a digital image when x, y, and intensity of values are all finite and discrete.
 NOTE: for an analog image: x, y, and intensity of values are continuous.</description>
    </item>
    
  </channel>
</rss>
